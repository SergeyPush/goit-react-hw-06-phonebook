{"version":3,"sources":["components/ContactItem.jsx","components/ContactsList.jsx","components/AddContact.jsx","components/FilterSearch.jsx","App.js","index.js"],"names":["ContactItem","contact","deleteContact","List","Item","Icon","name","Content","phone","floated","Button","size","color","onClick","id","ContactsList","contacts","Segment","basic","relaxed","verticalAlign","style","width","map","key","AddContact","addContact","useState","setName","setPhone","onSubmit","e","preventDefault","shortid","generate","Header","as","Input","placeholder","type","value","onChange","target","autoComplete","primary","FilterSearch","filter","setFilter","App","setContacts","useEffect","localStorage","getItem","JSON","parse","error","console","log","setItem","stringify","Container","className","find","item","toLowerCase","alert","prev","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db89761a.chunk.js","sourcesContent":["import React from 'react';\r\nimport T from 'prop-types';\r\nimport { List, Button } from 'semantic-ui-react';\r\n\r\nconst ContactItem = ({ contact, deleteContact }) => {\r\n  return (\r\n    <List.Item>\r\n      <List.Icon name=\"user outline\" />\r\n      <List.Content>\r\n        {contact.name} - {contact.phone}\r\n        <List.Content floated=\"right\">\r\n          <Button\r\n            size=\"tiny\"\r\n            color=\"red\"\r\n            onClick={() => deleteContact(contact.id)}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </List.Content>\r\n      </List.Content>\r\n    </List.Item>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contact: T.object.isRequired,\r\n  deleteContact: T.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from 'react';\r\nimport ContactItem from './ContactItem';\r\nimport { List, Segment } from 'semantic-ui-react';\r\nimport T from 'prop-types';\r\n\r\nconst ContactsList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <Segment basic>\r\n      <List\r\n        relaxed\r\n        verticalAlign=\"middle\"\r\n        size=\"big\"\r\n        style={{ width: '350px' }}\r\n      >\r\n        {contacts.map(contact => (\r\n          <ContactItem\r\n            key={contact.id}\r\n            contact={contact}\r\n            deleteContact={deleteContact}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: T.array.isRequired,\r\n  deleteContact: T.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import React, { useState } from 'react';\r\nimport shortid from 'shortid';\r\nimport T from 'prop-types';\r\nimport { Input, Button, Header, Segment } from 'semantic-ui-react';\r\n\r\nconst AddContact = ({ addContact }) => {\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n\r\n  const handleSubmitForm = e => {\r\n    e.preventDefault();\r\n    addContact({\r\n      id: shortid.generate(),\r\n      name,\r\n      phone,\r\n    });\r\n    setName('');\r\n    setPhone('');\r\n  };\r\n\r\n  return (\r\n    <Segment basic>\r\n      <form onSubmit={handleSubmitForm}>\r\n        <Header as=\"h2\">Add contact</Header>\r\n        <Input\r\n          placeholder=\"Name\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n        <Input\r\n          placeholder=\"Phone\"\r\n          type=\"number\"\r\n          name=\"phone\"\r\n          value={phone}\r\n          onChange={e => setPhone(e.target.value)}\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n        <Button primary type=\"submit\">\r\n          Add\r\n        </Button>\r\n      </form>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nAddContact.propTypes = {\r\n  addContact: T.func.isRequired,\r\n};\r\n\r\nexport default AddContact;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport { Input, Header, Segment } from 'semantic-ui-react';\r\nconst FilterSearch = ({ filter, setFilter }) => {\r\n  return (\r\n    <Segment basic>\r\n      <Header as=\"h2\">Search contact:</Header>\r\n      <Input\r\n        placeholder=\"Search\"\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={e => setFilter(e.target.value)}\r\n        id=\"search\"\r\n        autoComplete=\"off\"\r\n      />\r\n    </Segment>\r\n  );\r\n};\r\n\r\nFilterSearch.propTypes = {\r\n  filter: T.string.isRequired,\r\n  setFilter: T.func.isRequired,\r\n};\r\n\r\nexport default FilterSearch;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ContactList from './components/ContactsList';\r\nimport AddContact from './components/AddContact';\r\nimport FilterSearch from './components/FilterSearch';\r\nimport { Container } from 'semantic-ui-react';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const value = localStorage.getItem('contacts');\r\n      if (!value) {\r\n        return;\r\n      }\r\n      setContacts(JSON.parse(value));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const addContact = contact => {\r\n    const unique = contacts.find(\r\n      item => item.name.toLowerCase() === contact.name,\r\n    );\r\n    if (unique) {\r\n      alert(`${contact.name} is already in contacts`);\r\n      return;\r\n    }\r\n    setContacts(prev => [contact, ...prev]);\r\n  };\r\n  const deleteContact = id => {\r\n    setContacts(prev => prev.filter(contact => contact.id !== id));\r\n  };\r\n\r\n  const filteredContacts = () => {\r\n    return contacts.filter(item =>\r\n      item.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container className=\"app\">\r\n      <AddContact addContact={contact => addContact(contact)} />\r\n      <FilterSearch filter={filter} setFilter={setFilter} />\r\n      <ContactList\r\n        contacts={filteredContacts()}\r\n        deleteContact={deleteContact}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}